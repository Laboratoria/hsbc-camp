[
  {
    "objectID": "Week3-4_Intermediate.html",
    "href": "Week3-4_Intermediate.html",
    "title": "Intermediate Challenges (Weeks 3-4)",
    "section": "",
    "text": "Introducir conceptos de Programación Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con lógica intermedia y manipulación de strings.\nIntroducir el manejo de fechas y tiempos.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nValid Parentheses\nStacks, strings\n3\n\n\nHackerRank\nJava Date and Time\nManejo de fechas\n4\n\n\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\nEdabit\nATM Machine\nOOP, condicionales\n1,3\n\n\n\n\n\n\n\nPractica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas."
  },
  {
    "objectID": "Week3-4_Intermediate.html#objetivos-de-aprendizaje-oas",
    "href": "Week3-4_Intermediate.html#objetivos-de-aprendizaje-oas",
    "title": "Intermediate Challenges (Weeks 3-4)",
    "section": "",
    "text": "Introducir conceptos de Programación Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con lógica intermedia y manipulación de strings.\nIntroducir el manejo de fechas y tiempos."
  },
  {
    "objectID": "Week3-4_Intermediate.html#desafíos",
    "href": "Week3-4_Intermediate.html#desafíos",
    "title": "Intermediate Challenges (Weeks 3-4)",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nValid Parentheses\nStacks, strings\n3\n\n\nHackerRank\nJava Date and Time\nManejo de fechas\n4\n\n\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\nEdabit\nATM Machine\nOOP, condicionales\n1,3"
  },
  {
    "objectID": "Week3-4_Intermediate.html#consejos",
    "href": "Week3-4_Intermediate.html#consejos",
    "title": "Intermediate Challenges (Weeks 3-4)",
    "section": "",
    "text": "Practica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Java Coding Challenges Path",
    "section": "",
    "text": "Este repositorio contiene el plan de estudios para un curso de Java de 2 meses, dividido en 4 bloques de semanas. Cada bloque se enfoca en habilidades específicas, desde lo básico hasta problemas avanzados, culminando en un proyecto final.\n\n\n\nWeeks 1-2: Beginner challenges (syntax, data types, loops, conditionals).\nWeeks 3-4: Intermediate challenges (OOP, collections, intermediate algorithms).\nWeeks 5-6: Advanced challenges (data structures, complex problem-solving).\nWeeks 7-8: Capstone project and review.\n\n\n\n\n\nCada archivo README contiene una lista de desafíos con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) están asociados a cada desafío."
  },
  {
    "objectID": "index.html#estructura-del-curso",
    "href": "index.html#estructura-del-curso",
    "title": "Java Coding Challenges Path",
    "section": "",
    "text": "Weeks 1-2: Beginner challenges (syntax, data types, loops, conditionals).\nWeeks 3-4: Intermediate challenges (OOP, collections, intermediate algorithms).\nWeeks 5-6: Advanced challenges (data structures, complex problem-solving).\nWeeks 7-8: Capstone project and review."
  },
  {
    "objectID": "index.html#cómo-usar-este-repositorio",
    "href": "index.html#cómo-usar-este-repositorio",
    "title": "Java Coding Challenges Path",
    "section": "",
    "text": "Cada archivo README contiene una lista de desafíos con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) están asociados a cada desafío."
  },
  {
    "objectID": "Week7-8_AdvancedPrep.html",
    "href": "Week7-8_AdvancedPrep.html",
    "title": "Advanced Preparation Challenges (Weeks 7-8)",
    "section": "",
    "text": "Consolidar habilidades en manipulación de fechas y tiempos.\nResolver problemas con lógica condicional compleja.\nPracticar el manejo de transacciones y cálculos financieros.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nCodewars\nBanker’s Plan\nLógica financiera, loops\n2,3\n\n\nCodewars\nCalculating Bank Fees\nManejo de transacciones, condicionales\n2,3\n\n\nLeetCode\nDesign Underground System\nDiseño de sistemas, colecciones\n1,4\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nEdabit\nATM Machine\nOOP, condicionales\n2,3\n\n\n\n\n\n\n\nUsa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker’s Plan.\nPractica la división de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vacías, meses sin actividad, etc."
  },
  {
    "objectID": "Week7-8_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "href": "Week7-8_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Preparation Challenges (Weeks 7-8)",
    "section": "",
    "text": "Consolidar habilidades en manipulación de fechas y tiempos.\nResolver problemas con lógica condicional compleja.\nPracticar el manejo de transacciones y cálculos financieros."
  },
  {
    "objectID": "Week7-8_AdvancedPrep.html#desafíos",
    "href": "Week7-8_AdvancedPrep.html#desafíos",
    "title": "Advanced Preparation Challenges (Weeks 7-8)",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nCodewars\nBanker’s Plan\nLógica financiera, loops\n2,3\n\n\nCodewars\nCalculating Bank Fees\nManejo de transacciones, condicionales\n2,3\n\n\nLeetCode\nDesign Underground System\nDiseño de sistemas, colecciones\n1,4\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nEdabit\nATM Machine\nOOP, condicionales\n2,3"
  },
  {
    "objectID": "Week7-8_AdvancedPrep.html#consejos",
    "href": "Week7-8_AdvancedPrep.html#consejos",
    "title": "Advanced Preparation Challenges (Weeks 7-8)",
    "section": "",
    "text": "Usa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker’s Plan.\nPractica la división de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vacías, meses sin actividad, etc."
  },
  {
    "objectID": "Week5-6_Advanced.html",
    "href": "Week5-6_Advanced.html",
    "title": "Advanced Challenges (Weeks 5-6)",
    "section": "",
    "text": "Profundizar en estructuras de datos avanzadas (árboles, grafos, etc.).\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y análisis de complejidad.\nTrabajar con recursión y programación dinámica.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nMerge Intervals\nSorting, arrays\n2\n\n\nLeetCode\nMaximum Subarray\nProgramación dinámica\n2,3\n\n\nCodewars\nRange Extraction\nArrays, lógica\n2\n\n\nHackerRank\nJava BitSet\nManipulación de bits\n1\n\n\nAdvent of Code\nDay 1: Report Repair\nArrays, loops\n2,3\n\n\n\n\n\n\n\nAprende a identificar la complejidad temporal de tus soluciones.\nUsa recursión para problemas como “Fibonacci” o “Factorial”."
  },
  {
    "objectID": "Week5-6_Advanced.html#objetivos-de-aprendizaje-oas",
    "href": "Week5-6_Advanced.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Challenges (Weeks 5-6)",
    "section": "",
    "text": "Profundizar en estructuras de datos avanzadas (árboles, grafos, etc.).\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y análisis de complejidad.\nTrabajar con recursión y programación dinámica."
  },
  {
    "objectID": "Week5-6_Advanced.html#desafíos",
    "href": "Week5-6_Advanced.html#desafíos",
    "title": "Advanced Challenges (Weeks 5-6)",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nMerge Intervals\nSorting, arrays\n2\n\n\nLeetCode\nMaximum Subarray\nProgramación dinámica\n2,3\n\n\nCodewars\nRange Extraction\nArrays, lógica\n2\n\n\nHackerRank\nJava BitSet\nManipulación de bits\n1\n\n\nAdvent of Code\nDay 1: Report Repair\nArrays, loops\n2,3"
  },
  {
    "objectID": "Week5-6_Advanced.html#consejos",
    "href": "Week5-6_Advanced.html#consejos",
    "title": "Advanced Challenges (Weeks 5-6)",
    "section": "",
    "text": "Aprende a identificar la complejidad temporal de tus soluciones.\nUsa recursión para problemas como “Fibonacci” o “Factorial”."
  },
  {
    "objectID": "Week1-2_Beginner.html",
    "href": "Week1-2_Beginner.html",
    "title": "Java Basics: Weeks 1-2",
    "section": "",
    "text": "Sintaxis básica de Java.\nManipulación de tipos de datos primitivos.\nUso de condicionales y loops.\nTrabajo con arrays y strings.\n\n\n\n\n\n\n\nID\nPlataforma\nDesafío\nHabilidades\nOA\n\n\n\n\nJC0100\nCodewars\nMultiply\nOperaciones básicas\n1,2\n\n\nJC0101\nCodewars\nEven or Odd\nCondicionales\n1,3\n\n\nJC0102\nEdabit\nSum of Two Numbers\nFunciones básicas\n1,2\n\n\nJC0103\nEdabit\nMinutes to Seconds\nConversión de datos\n1,2\n\n\nJC0104\nHackerRank\nWelcome to Java!\nSalida por consola\n1\n\n\nJC0105\nCodewars\nKeep Hydrated!\nLoops y matemáticas\n3\n\n\nJC0106\nCodewars\nBoolean to String\nTipos de datos\n1,2\n\n\nJC0107\nHackerRank\nJava If-Else\nCondicionales\n3\n\n\nJC0108\nHackerRank\nJava Loops I\nLoops\n3\n\n\nJC0109\nEdabit\nDivisible by Five\nCondicionales\n3\n\n\nJC0110\nCodewars\nSum Arrays\nArrays y loops\n4\n\n\nJC0111\nCodewars\nCount Positives/Sum Negatives\nArrays\n4\n\n\nJC0112\nHackerRank\nJava Stdin and Stdout I\nEntrada/Salida\n1\n\n\nJC0113\nHackerRank\nJava Output Formatting\nFormato de strings\n4\n\n\nJC0114\nEdabit\nSmallest and Largest Numbers\nArrays\n4\n\n\nJC0115\nCodewars\nRemove First and Last Character\nStrings\n4\n\n\nJC0116\nCodewars\nString Repeat\nStrings y loops\n4\n\n\nJC0117\nHackerRank\nJava Strings Introduction\nStrings\n4\n\n\nJC0118\nEdabit\nReverse a String\nStrings\n4\n\n\nJC0119\nEdabit\nCheck String Suffix\nStrings\n4\n\n\nJC0120\nCodewars\nFind the Odd Int\nArrays y lógica\n3,4\n\n\nJC0121\nCodewars\nCredit Card Mask\nStrings\n4\n\n\nJC0122\nHackerRank\nJava Subarray\nArrays y loops\n3,4\n\n\nJC0123\nHackerRank\nJava String Tokens\nStrings\n4\n\n\nJC0124\nEdabit\nCount Duplicates\nStrings y colecciones\n4\n\n\nJC0125\nCodewars\nIsograms\nStrings\n4\n\n\nJC0126\nCodewars\nVowel Count\nStrings y loops\n4\n\n\nJC0127\nHackerRank\nJava Datatypes\nTipos de datos\n2\n\n\nJC0128\nEdabit\nCheck Palindrome Number\nCondicionales y números\n3,4\n\n\nJC0129\nEdabit\nLargest Number in Array\nArrays\n4\n\n\n\n\n\n\n\nUsa System.out.println para depurar tu código.\nPrueba casos extremos: arrays vacíos, valores negativos, etc."
  },
  {
    "objectID": "Week1-2_Beginner.html#objetivos-de-aprendizaje-oas",
    "href": "Week1-2_Beginner.html#objetivos-de-aprendizaje-oas",
    "title": "Java Basics: Weeks 1-2",
    "section": "",
    "text": "Sintaxis básica de Java.\nManipulación de tipos de datos primitivos.\nUso de condicionales y loops.\nTrabajo con arrays y strings."
  },
  {
    "objectID": "Week1-2_Beginner.html#ejercicios",
    "href": "Week1-2_Beginner.html#ejercicios",
    "title": "Java Basics: Weeks 1-2",
    "section": "",
    "text": "ID\nPlataforma\nDesafío\nHabilidades\nOA\n\n\n\n\nJC0100\nCodewars\nMultiply\nOperaciones básicas\n1,2\n\n\nJC0101\nCodewars\nEven or Odd\nCondicionales\n1,3\n\n\nJC0102\nEdabit\nSum of Two Numbers\nFunciones básicas\n1,2\n\n\nJC0103\nEdabit\nMinutes to Seconds\nConversión de datos\n1,2\n\n\nJC0104\nHackerRank\nWelcome to Java!\nSalida por consola\n1\n\n\nJC0105\nCodewars\nKeep Hydrated!\nLoops y matemáticas\n3\n\n\nJC0106\nCodewars\nBoolean to String\nTipos de datos\n1,2\n\n\nJC0107\nHackerRank\nJava If-Else\nCondicionales\n3\n\n\nJC0108\nHackerRank\nJava Loops I\nLoops\n3\n\n\nJC0109\nEdabit\nDivisible by Five\nCondicionales\n3\n\n\nJC0110\nCodewars\nSum Arrays\nArrays y loops\n4\n\n\nJC0111\nCodewars\nCount Positives/Sum Negatives\nArrays\n4\n\n\nJC0112\nHackerRank\nJava Stdin and Stdout I\nEntrada/Salida\n1\n\n\nJC0113\nHackerRank\nJava Output Formatting\nFormato de strings\n4\n\n\nJC0114\nEdabit\nSmallest and Largest Numbers\nArrays\n4\n\n\nJC0115\nCodewars\nRemove First and Last Character\nStrings\n4\n\n\nJC0116\nCodewars\nString Repeat\nStrings y loops\n4\n\n\nJC0117\nHackerRank\nJava Strings Introduction\nStrings\n4\n\n\nJC0118\nEdabit\nReverse a String\nStrings\n4\n\n\nJC0119\nEdabit\nCheck String Suffix\nStrings\n4\n\n\nJC0120\nCodewars\nFind the Odd Int\nArrays y lógica\n3,4\n\n\nJC0121\nCodewars\nCredit Card Mask\nStrings\n4\n\n\nJC0122\nHackerRank\nJava Subarray\nArrays y loops\n3,4\n\n\nJC0123\nHackerRank\nJava String Tokens\nStrings\n4\n\n\nJC0124\nEdabit\nCount Duplicates\nStrings y colecciones\n4\n\n\nJC0125\nCodewars\nIsograms\nStrings\n4\n\n\nJC0126\nCodewars\nVowel Count\nStrings y loops\n4\n\n\nJC0127\nHackerRank\nJava Datatypes\nTipos de datos\n2\n\n\nJC0128\nEdabit\nCheck Palindrome Number\nCondicionales y números\n3,4\n\n\nJC0129\nEdabit\nLargest Number in Array\nArrays\n4"
  },
  {
    "objectID": "Week1-2_Beginner.html#consejos",
    "href": "Week1-2_Beginner.html#consejos",
    "title": "Java Basics: Weeks 1-2",
    "section": "",
    "text": "Usa System.out.println para depurar tu código.\nPrueba casos extremos: arrays vacíos, valores negativos, etc."
  }
]
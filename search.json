[
  {
    "objectID": "Modulo_1_Java_Basics.html",
    "href": "Modulo_1_Java_Basics.html",
    "title": "Java Basics",
    "section": "",
    "text": "En este primer m√≥dulo del bootcamp trabajaremos con la sintaxis b√°sica de Java. Practicaremos c√≥mo escribir funciones, usar punto y coma al final de las l√≠neas de c√≥digo, y c√≥mo declarar, inicializar y utilizar variables y constantes. Tambi√©n trabajaremos con condicionales, loops, tipos de datos primitivos, arreglos y strings.\nSi tienes experiencia en lenguajes como JavaScript o Python, reconocer√°s conceptos como variables y bucles, y podr√°s enfocarte en las particularidades de Java (tipado est√°tico, estructura de clases, manejo de arrays). Si es tu primer acercamiento a la programaci√≥n, estos conceptos ser√°n tu base s√≥lida para avanzar.\nEl enfoque incluye:\n\nSintaxis espec√≠fica de Java (vs otros lenguajes)\nBuenas pr√°cticas desde el d√≠a 1\nEjercicios para adaptar l√≥gica previa (o construirla desde cero)\n\n¬°Todos partiremos de ejercicios b√°sicos que nos permitir√°n nivelar conocimientos mientras exploramos Java!\n\n\n\n\nSintaxis b√°sica de Java.\nManipulaci√≥n de tipos de datos primitivos.\nUso de condicionales.\nUso de loops.\nTrabajo con arrays\nTrabajo con strings."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#m√≥dulo-1-fundamentos-de-java",
    "href": "Modulo_1_Java_Basics.html#m√≥dulo-1-fundamentos-de-java",
    "title": "Java Basics",
    "section": "",
    "text": "En este primer m√≥dulo del bootcamp trabajaremos con la sintaxis b√°sica de Java. Practicaremos c√≥mo escribir funciones, usar punto y coma al final de las l√≠neas de c√≥digo, y c√≥mo declarar, inicializar y utilizar variables y constantes. Tambi√©n trabajaremos con condicionales, loops, tipos de datos primitivos, arreglos y strings.\nSi tienes experiencia en lenguajes como JavaScript o Python, reconocer√°s conceptos como variables y bucles, y podr√°s enfocarte en las particularidades de Java (tipado est√°tico, estructura de clases, manejo de arrays). Si es tu primer acercamiento a la programaci√≥n, estos conceptos ser√°n tu base s√≥lida para avanzar.\nEl enfoque incluye:\n\nSintaxis espec√≠fica de Java (vs otros lenguajes)\nBuenas pr√°cticas desde el d√≠a 1\nEjercicios para adaptar l√≥gica previa (o construirla desde cero)\n\n¬°Todos partiremos de ejercicios b√°sicos que nos permitir√°n nivelar conocimientos mientras exploramos Java!"
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_1_Java_Basics.html#objetivos-de-aprendizaje-oas",
    "title": "Java Basics",
    "section": "",
    "text": "Sintaxis b√°sica de Java.\nManipulaci√≥n de tipos de datos primitivos.\nUso de condicionales.\nUso de loops.\nTrabajo con arrays\nTrabajo con strings."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#consejos",
    "href": "Modulo_1_Java_Basics.html#consejos",
    "title": "Java Basics",
    "section": "Consejos",
    "text": "Consejos\n\nUsa System.out.println para depurar tu c√≥digo.\nPrueba casos extremos: arrays vac√≠os, valores negativos, etc."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#materiales-de-referencia",
    "href": "Modulo_1_Java_Basics.html#materiales-de-referencia",
    "title": "Java Basics",
    "section": "Materiales de Referencia",
    "text": "Materiales de Referencia\n\n\n\nObjetivo de Aprendizaje\nMateriales Escritos\nVideos\n\n\n\n\n1. Sintaxis b√°sica de Java\nJava Tutorial for Beginners - W3Schools  Java Basics - Oracle Documentation  Introduction to Java Programming - GeeksforGeeks\nSintaxis de Java\n\n\n2. Manipulaci√≥n de tipos de datos primitivos\nPrimitive Data Types - Oracle Documentation  Java Data Types - W3Schools  Primitive Data Types in Java - GeeksforGeeks\nTipos de datos primitivos  Operadores\n\n\n3. Uso de condicionales\nControl Flow Statements (If-Else) - Oracle  Java If ‚Ä¶ Else - W3Schools  Conditional Statements - GeeksforGeeks\nCondicionales\n\n\n4. Uso de loops\nLoops - Oracle Documentation  Java Loops - W3Schools  Loops in Java - GeeksforGeeks\nLoops\n\n\n5. Trabajo con arrays\nArrays - Oracle Documentation  Java Arrays - W3Schools  Arrays in Java - GeeksforGeeks\nArrays Unidimensionales y Bidimensionales\n\n\n6. Trabajo con strings\nStrings - Oracle Documentation  Java Strings - W3Schools  String Class in Java - GeeksforGeeks\n\n\n\nRecurso Adicional: Java para Programadoras\nMaterial escrito\nVideo playlist"
  },
  {
    "objectID": "TODO.html",
    "href": "TODO.html",
    "title": "HSBC Java Camp by Laboratoria",
    "section": "",
    "text": "Dividir OAs en 6 (3 y 4 dividir en 2 partes cada uno)\nMover Referencias a Modulo 1\nOcultar otros m√≥dulos 2-4 en el men√∫ e √≠ndice.\nCambiar c√≥digos de ejercicio\nIncluir una intro coloquial al curso\nCambiar el titulo de M1"
  },
  {
    "objectID": "TODO.html#tareas",
    "href": "TODO.html#tareas",
    "title": "HSBC Java Camp by Laboratoria",
    "section": "",
    "text": "Dividir OAs en 6 (3 y 4 dividir en 2 partes cada uno)\nMover Referencias a Modulo 1\nOcultar otros m√≥dulos 2-4 en el men√∫ e √≠ndice.\nCambiar c√≥digos de ejercicio\nIncluir una intro coloquial al curso\nCambiar el titulo de M1"
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html",
    "href": "Modulo_4_AdvancedPrep.html",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Consolidar habilidades en manipulaci√≥n de fechas y tiempos.\nResolver m√°s problemas con l√≥gica condicional.\nPracticar el manejo de transacciones y c√°lculos financieros.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nDesign Parking System\nDise√±o de sistemas\n2\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nCodewars\nBanker‚Äôs Plan\nL√≥gica financiera, loops\n2,3\n\n\nLeetCode\nDesign Underground System\nDise√±o de sistemas, colecciones\n1\n\n\n\n\n\n\n\nUsa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker‚Äôs Plan.\nPractica la divisi√≥n de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vac√≠as, meses sin actividad, etc."
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_4_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Consolidar habilidades en manipulaci√≥n de fechas y tiempos.\nResolver m√°s problemas con l√≥gica condicional.\nPracticar el manejo de transacciones y c√°lculos financieros."
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#desaf√≠os",
    "href": "Modulo_4_AdvancedPrep.html#desaf√≠os",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nDesign Parking System\nDise√±o de sistemas\n2\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nCodewars\nBanker‚Äôs Plan\nL√≥gica financiera, loops\n2,3\n\n\nLeetCode\nDesign Underground System\nDise√±o de sistemas, colecciones\n1"
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#consejos",
    "href": "Modulo_4_AdvancedPrep.html#consejos",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Usa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker‚Äôs Plan.\nPractica la divisi√≥n de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vac√≠as, meses sin actividad, etc."
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Para contribuir a este proyecto, sigue estos pasos:\n\n\n\nInstala Quarto Descarga e instala Quarto desde: https://quarto.org/docs/get-started/\nExtensi√≥n VSCode (opcional) Instala la extensi√≥n oficial de Quarto en Visual Studio Code.\n\n\n\n\n\nVista previa: Ejecuta quarto preview para ver los cambios localmente\nPublicar: Usa quarto publish gh-pages para publicar en GitHub Pages\n\nPara m√°s informaci√≥n consulta la documentaci√≥n oficial de Quarto."
  },
  {
    "objectID": "CONTRIBUTING.html#requisitos",
    "href": "CONTRIBUTING.html#requisitos",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Instala Quarto Descarga e instala Quarto desde: https://quarto.org/docs/get-started/\nExtensi√≥n VSCode (opcional) Instala la extensi√≥n oficial de Quarto en Visual Studio Code."
  },
  {
    "objectID": "CONTRIBUTING.html#uso-b√°sico",
    "href": "CONTRIBUTING.html#uso-b√°sico",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Vista previa: Ejecuta quarto preview para ver los cambios localmente\nPublicar: Usa quarto publish gh-pages para publicar en GitHub Pages\n\nPara m√°s informaci√≥n consulta la documentaci√≥n oficial de Quarto."
  },
  {
    "objectID": "presentacion.html#diapositiva-1-bienvenidas-al-mundo-de-java",
    "href": "presentacion.html#diapositiva-1-bienvenidas-al-mundo-de-java",
    "title": "Welcome to Java",
    "section": "Diapositiva 1: ¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "text": "Diapositiva 1: ¬°Bienvenidas al Mundo de Java! üéâ‚òï\nJava no es solo caf√©‚Ä¶ ¬°es magia que hace funcionar apps, juegos y hasta naves espaciales! üöÄ\nObjetivo de la charla: Romper el hielo con un ejercicio pr√°ctico y entender c√≥mo Java nos ayuda a resolver problemas."
  },
  {
    "objectID": "presentacion.html#diapositiva-2-el-ejemplo-m√°gico",
    "href": "presentacion.html#diapositiva-2-el-ejemplo-m√°gico",
    "title": "Welcome to Java",
    "section": "Diapositiva 2: El Ejemplo M√°gico üßô‚ôÄÔ∏èüìÜ",
    "text": "Diapositiva 2: El Ejemplo M√°gico üßô‚ôÄÔ∏èüìÜ\nEjercicio propuesto: Crear un m√©todo que determine si un a√±o es bisiesto.\nPor qu√© este ejercicio:\n\nCombina condicionales y operadores l√≥gicos\nEs un problema del mundo real (¬°hasta Google lo usa!)"
  },
  {
    "objectID": "presentacion.html#diapositiva-3-desglosando-el-problema",
    "href": "presentacion.html#diapositiva-3-desglosando-el-problema",
    "title": "Welcome to Java",
    "section": "Diapositiva 3: Desglosando el Problema üß©",
    "text": "Diapositiva 3: Desglosando el Problema üß©\nReglas de a√±o bisiesto:\n\nSi el a√±o es divisible por 4 ‚Üí Posible bisiesto\nPero si es divisible por 100 ‚Üí No es bisiesto\nA menos que tambi√©n sea divisible por 400 ‚Üí ¬°S√≠ es bisiesto!"
  },
  {
    "objectID": "presentacion.html#diapositiva-4-a-codear-parte-1",
    "href": "presentacion.html#diapositiva-4-a-codear-parte-1",
    "title": "Welcome to Java",
    "section": "Diapositiva 4: ¬°A Codear! üíª (Parte 1)",
    "text": "Diapositiva 4: ¬°A Codear! üíª (Parte 1)\npublic class LeapYear {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            return true;\n        } else if (year % 100 == 0) {\n            return false;\n        } else if (year % 400 == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}"
  },
  {
    "objectID": "presentacion.html#diapositiva-5-depurando-el-c√≥digo",
    "href": "presentacion.html#diapositiva-5-depurando-el-c√≥digo",
    "title": "Welcome to Java",
    "section": "Diapositiva 5: Depurando el C√≥digo üêõüîç",
    "text": "Diapositiva 5: Depurando el C√≥digo üêõüîç\nError com√∫n: No seguir el orden correcto de las condiciones.\nSoluci√≥n correcta:\npublic static boolean isLeapYear(int year) {\n    if (year % 400 == 0) {\n        return true;\n    } else if (year % 100 == 0) {\n        return false;\n    } else {\n        return year % 4 == 0;\n    }\n}"
  },
  {
    "objectID": "presentacion.html#diapositiva-6-probando-nuestro-c√≥digo",
    "href": "presentacion.html#diapositiva-6-probando-nuestro-c√≥digo",
    "title": "Welcome to Java",
    "section": "Diapositiva 6: Probando Nuestro C√≥digo üß™",
    "text": "Diapositiva 6: Probando Nuestro C√≥digo üß™\nEjemplos interactivos:\n\n2000 ‚Üí S√≠ (divisible por 400)\n1900 ‚Üí No (divisible por 100 pero no por 400)\n2024 ‚Üí S√≠ (divisible por 4, no por 100)"
  },
  {
    "objectID": "presentacion.html#java-es-poder",
    "href": "presentacion.html#java-es-poder",
    "title": "Welcome to Java",
    "section": "¬°Java es Poder! üí™‚ú®",
    "text": "¬°Java es Poder! üí™‚ú®\nMensaje final:\nCada error es un paso para dominar Java. ¬°Ustedes ya resolvieron un problema real en 20 minutos! üéâ"
  },
  {
    "objectID": "Modulo_2_Deeper_Java.html",
    "href": "Modulo_2_Deeper_Java.html",
    "title": "Deeper Java",
    "section": "",
    "text": "Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con l√≥gica y manipulaci√≥n de strings.\nIntroducir el manejo de fechas y tiempos.\n\n\n\n\n\n\n\nID\nPlataforma\nDesaf√≠o\nHabilidades\nOA\n\n\n\n\n201\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\n202\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\n203\nHackerRank\nJava List\nManipulaci√≥n de listas\n2\n\n\n204\nCodewars\nYour order, please\nUso de listas y strings\n2, 3\n\n\n205\nLeetCode\nValid Parentheses\nStack, manipulaci√≥n de strings\n3\n\n\n206\nHackerRank\nJava String Reverse\nManipulaci√≥n de strings, pal√≠ndromos\n3\n\n\n207\nCodewars\nDuplicate Encoder\nManipulaci√≥n de strings, contadores\n3\n\n\n208\nHackerRank\nJava Date and Time\nJava Date Time API\n4\n\n\n209\nCodewars\nATM\nOOP, condicionales\n1,3\n\n\n210\nExercism\nElon‚Äôs Toy Car\nOOP\n1\n\n\n211\nExercism\nNeed for Speed\nOOP\n1\n\n\n212\nExercism\nBooking Up for Beauty\nJava Date Time API\n4\n\n\n213\nExercism\nMeetup\nJava Date Time API\n4\n\n\n214\nCodecademy\nJava Language Families\nOOP\n1\n\n\n215\nExercism\nWizards and Warriors\nOOP\n1\n\n\n216\nHackerRank\nPrime Dates\nJava Date Time API\n4\n\n\n217\nCodecademy\nLanguage Families\nOOP\n4\n\n\n\n\n\n\n\n\nPractica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas.\n\n\n\n\n\n\n\nObjetivo de Aprendizaje\nMateriales Escritos\n\n\n\n\n1. Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nJava OOP(Object Oriented Programming) Concepts  Java Class and Object QuizObjects, Classes, Interfaces, Packages, and InheritanceClasses and Objects\n\n\n2. Trabajar con colecciones (listas, mapas, conjuntos).\nThe Collections Framework\n\n\n3. Resolver problemas con l√≥gica intermedia y manipulaci√≥n de strings.\nStringsString Builders\n\n\n4. Introducir el manejo de fechas y tiempos.\nDate class in Java (With Examples)The Date Time API"
  },
  {
    "objectID": "Modulo_2_Deeper_Java.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_2_Deeper_Java.html#objetivos-de-aprendizaje-oas",
    "title": "Deeper Java",
    "section": "",
    "text": "Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con l√≥gica y manipulaci√≥n de strings.\nIntroducir el manejo de fechas y tiempos."
  },
  {
    "objectID": "Modulo_2_Deeper_Java.html#desaf√≠os",
    "href": "Modulo_2_Deeper_Java.html#desaf√≠os",
    "title": "Deeper Java",
    "section": "",
    "text": "ID\nPlataforma\nDesaf√≠o\nHabilidades\nOA\n\n\n\n\n201\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\n202\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\n203\nHackerRank\nJava List\nManipulaci√≥n de listas\n2\n\n\n204\nCodewars\nYour order, please\nUso de listas y strings\n2, 3\n\n\n205\nLeetCode\nValid Parentheses\nStack, manipulaci√≥n de strings\n3\n\n\n206\nHackerRank\nJava String Reverse\nManipulaci√≥n de strings, pal√≠ndromos\n3\n\n\n207\nCodewars\nDuplicate Encoder\nManipulaci√≥n de strings, contadores\n3\n\n\n208\nHackerRank\nJava Date and Time\nJava Date Time API\n4\n\n\n209\nCodewars\nATM\nOOP, condicionales\n1,3\n\n\n210\nExercism\nElon‚Äôs Toy Car\nOOP\n1\n\n\n211\nExercism\nNeed for Speed\nOOP\n1\n\n\n212\nExercism\nBooking Up for Beauty\nJava Date Time API\n4\n\n\n213\nExercism\nMeetup\nJava Date Time API\n4\n\n\n214\nCodecademy\nJava Language Families\nOOP\n1\n\n\n215\nExercism\nWizards and Warriors\nOOP\n1\n\n\n216\nHackerRank\nPrime Dates\nJava Date Time API\n4\n\n\n217\nCodecademy\nLanguage Families\nOOP\n4"
  },
  {
    "objectID": "Modulo_2_Deeper_Java.html#consejos",
    "href": "Modulo_2_Deeper_Java.html#consejos",
    "title": "Deeper Java",
    "section": "",
    "text": "Practica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas."
  },
  {
    "objectID": "Modulo_2_Deeper_Java.html#materiales-de-referencia",
    "href": "Modulo_2_Deeper_Java.html#materiales-de-referencia",
    "title": "Deeper Java",
    "section": "",
    "text": "Objetivo de Aprendizaje\nMateriales Escritos\n\n\n\n\n1. Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nJava OOP(Object Oriented Programming) Concepts  Java Class and Object QuizObjects, Classes, Interfaces, Packages, and InheritanceClasses and Objects\n\n\n2. Trabajar con colecciones (listas, mapas, conjuntos).\nThe Collections Framework\n\n\n3. Resolver problemas con l√≥gica intermedia y manipulaci√≥n de strings.\nStringsString Builders\n\n\n4. Introducir el manejo de fechas y tiempos.\nDate class in Java (With Examples)The Date Time API"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "Este repositorio contiene el plan de estudios para un curso de Java de 2 meses, dividido en 4 bloques de semanas. Cada bloque se enfoca en habilidades espec√≠ficas, desde lo b√°sico hasta problemas avanzados, culminando en un proyecto final.\n\n\n\nM√≥dulo 1 (syntax, data types, loops, conditionals).\nM√≥dulo 2 (OOP, collections, algorithms).\nM√≥dulo 3 (data structures, problem-solving).\nM√≥dulo 4 (advanced preparation).\n\n\n\n\n\nCada secci√≥n contiene una lista de desaf√≠os con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) est√°n asociados a cada desaf√≠o."
  },
  {
    "objectID": "index.html#estructura-del-curso",
    "href": "index.html#estructura-del-curso",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "M√≥dulo 1 (syntax, data types, loops, conditionals).\nM√≥dulo 2 (OOP, collections, algorithms).\nM√≥dulo 3 (data structures, problem-solving).\nM√≥dulo 4 (advanced preparation)."
  },
  {
    "objectID": "index.html#c√≥mo-usar-este-repositorio",
    "href": "index.html#c√≥mo-usar-este-repositorio",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "Cada secci√≥n contiene una lista de desaf√≠os con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) est√°n asociados a cada desaf√≠o."
  },
  {
    "objectID": "Modulo_3_Java_Craft.html",
    "href": "Modulo_3_Java_Craft.html",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Profundizar en conceptos de Programaci√≥n Orientada a Objetos (OOP).\nAfianzar sintaxis de Java, condicionales, loops, arrays y strings.\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y an√°lisis de complejidad.\n\n\n\n\n\n\n\nID\nPlataforma\nDesaf√≠o\nHabilidades\nOA\n\n\n\n\n301\nEabit\nSecret Society\nArray, Strings\n2\n\n\n302\nLeet Code\nFind Words That Can Be Formed by Characters\nArray, Strings\n2\n\n\n303\nLeet Code\nLong Pressed Name\nString\n2\n\n\n304\nLeet Code\nNumber of Good Pairs\nArray\n2\n\n\n305\nLeet Code\nRichest Customer Wealth\nArray\n2\n\n\n306\nLeet Code\nRoman to Integer\nCondicionales\n2\n\n\n307\nLeet Code\nSort Array By Parity\nArray\n2\n\n\n308\nLeet Code\nValid Anagram\nString\n2\n\n\n309\nCodewars\nMultiples of 3 or 5\nInteger\n2\n\n\n310\nCodewars\nFormat words into a sentence\nArray, Strings\n2\n\n\n311\nCodewars\nArray.diff\nArray\n2\n\n\n312\nCodewars\nHuman Readable Time\nJava Date Time API\n2\n\n\n313\nLeet Code\nMerge Intervals\nArray\n2\n\n\n314\nLeet Code\nMaximum Subarray\nArray\n2\n\n\n315\nCodewars\nRange Extraction\nArray\n2\n\n\n316\nCodewars\nMolecule to Atoms*\nString\n3, 4\n\n\n317\nCodewars\nString incrementer*\nString\n3, 4\n\n\n318\nCodewars\nMerged String Checker*\nArray, Strings\n3, 4\n\n\n319\nCodewars\nClosest elevator*\nArray\n3, 4\n\n\n320\nLeet Code\nMinimum Number of Operations to Move All Balls to Each Box*\nLoop\n3, 4\n\n\n321\nCodewars\nThe Lift*\nArray\n3, 4\n\n\n322\nAdvent of Code\nReport Repair*\nArray\n3, 4\n\n\n323\nCodewars\nRecursion 101*\nRecursion\n3, 4\n\n\n324\nLeet Code\nDeepest Leaves Sum*\nRecursion\n3, 4\n\n\n325\nLeet Code\nNumbers of Islands*\nRecursion\n3, 4\n\n\n\nLos ejercicios marcados con * tiene una alta complejidad. Intenta resolverlos pero no te frustes si no puedes llegar a una soluci√≥n definitiva.\n\n\n\n\n\n\nObjetivo de Aprendizaje\nMateriales Escritos\n\n\n\n\n1. Profundizar en conceptos de Programaci√≥n Orientada a Objetos (OOP).\nJava OOP(Object Oriented Programming) Concepts  Java Class and Object QuizObjects, Classes, Interfaces, Packages, and InheritanceClasses and Objects\n\n\n3. Resolver problemas complejos con algoritmos eficientes.\nRecursion in Java Full Tutorial - How to Create Recursive Methods\n\n\n4. Introducir Big O Notation y an√°lisis de complejidad.\nBig-O Notation - For Coding Interviews"
  },
  {
    "objectID": "Modulo_3_Java_Craft.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_3_Java_Craft.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Profundizar en conceptos de Programaci√≥n Orientada a Objetos (OOP).\nAfianzar sintaxis de Java, condicionales, loops, arrays y strings.\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y an√°lisis de complejidad."
  },
  {
    "objectID": "Modulo_3_Java_Craft.html#desaf√≠os",
    "href": "Modulo_3_Java_Craft.html#desaf√≠os",
    "title": "Advanced Challenges",
    "section": "",
    "text": "ID\nPlataforma\nDesaf√≠o\nHabilidades\nOA\n\n\n\n\n301\nEabit\nSecret Society\nArray, Strings\n2\n\n\n302\nLeet Code\nFind Words That Can Be Formed by Characters\nArray, Strings\n2\n\n\n303\nLeet Code\nLong Pressed Name\nString\n2\n\n\n304\nLeet Code\nNumber of Good Pairs\nArray\n2\n\n\n305\nLeet Code\nRichest Customer Wealth\nArray\n2\n\n\n306\nLeet Code\nRoman to Integer\nCondicionales\n2\n\n\n307\nLeet Code\nSort Array By Parity\nArray\n2\n\n\n308\nLeet Code\nValid Anagram\nString\n2\n\n\n309\nCodewars\nMultiples of 3 or 5\nInteger\n2\n\n\n310\nCodewars\nFormat words into a sentence\nArray, Strings\n2\n\n\n311\nCodewars\nArray.diff\nArray\n2\n\n\n312\nCodewars\nHuman Readable Time\nJava Date Time API\n2\n\n\n313\nLeet Code\nMerge Intervals\nArray\n2\n\n\n314\nLeet Code\nMaximum Subarray\nArray\n2\n\n\n315\nCodewars\nRange Extraction\nArray\n2\n\n\n316\nCodewars\nMolecule to Atoms*\nString\n3, 4\n\n\n317\nCodewars\nString incrementer*\nString\n3, 4\n\n\n318\nCodewars\nMerged String Checker*\nArray, Strings\n3, 4\n\n\n319\nCodewars\nClosest elevator*\nArray\n3, 4\n\n\n320\nLeet Code\nMinimum Number of Operations to Move All Balls to Each Box*\nLoop\n3, 4\n\n\n321\nCodewars\nThe Lift*\nArray\n3, 4\n\n\n322\nAdvent of Code\nReport Repair*\nArray\n3, 4\n\n\n323\nCodewars\nRecursion 101*\nRecursion\n3, 4\n\n\n324\nLeet Code\nDeepest Leaves Sum*\nRecursion\n3, 4\n\n\n325\nLeet Code\nNumbers of Islands*\nRecursion\n3, 4\n\n\n\nLos ejercicios marcados con * tiene una alta complejidad. Intenta resolverlos pero no te frustes si no puedes llegar a una soluci√≥n definitiva."
  },
  {
    "objectID": "Modulo_3_Java_Craft.html#materiales-de-referencia",
    "href": "Modulo_3_Java_Craft.html#materiales-de-referencia",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Objetivo de Aprendizaje\nMateriales Escritos\n\n\n\n\n1. Profundizar en conceptos de Programaci√≥n Orientada a Objetos (OOP).\nJava OOP(Object Oriented Programming) Concepts  Java Class and Object QuizObjects, Classes, Interfaces, Packages, and InheritanceClasses and Objects\n\n\n3. Resolver problemas complejos con algoritmos eficientes.\nRecursion in Java Full Tutorial - How to Create Recursive Methods\n\n\n4. Introducir Big O Notation y an√°lisis de complejidad.\nBig-O Notation - For Coding Interviews"
  }
]
[
  {
    "objectID": "Modulo_1_Java_Basics.html",
    "href": "Modulo_1_Java_Basics.html",
    "title": "Java Basics",
    "section": "",
    "text": "En este primer m√≥dulo del bootcamp trabajaremos con la sintaxis b√°sica de Java. Practicaremos c√≥mo escribir funciones, usar punto y coma al final de las l√≠neas de c√≥digo, y c√≥mo declarar, inicializar y utilizar variables y constantes. Tambi√©n trabajaremos con condicionales, loops, tipos de datos primitivos, arreglos y strings.\nSi tienes experiencia en lenguajes como JavaScript o Python, reconocer√°s conceptos como variables y bucles, y podr√°s enfocarte en las particularidades de Java (tipado est√°tico, estructura de clases, manejo de arrays). Si es tu primer acercamiento a la programaci√≥n, estos conceptos ser√°n tu base s√≥lida para avanzar.\nEl enfoque incluye:\n\nSintaxis espec√≠fica de Java (vs otros lenguajes)\nBuenas pr√°cticas desde el d√≠a 1\nEjercicios para adaptar l√≥gica previa (o construirla desde cero)\n\n¬°Todos partiremos de ejercicios b√°sicos que nos permitir√°n nivelar conocimientos mientras exploramos Java!\n\n\n\n\nSintaxis b√°sica de Java.\nManipulaci√≥n de tipos de datos primitivos.\nUso de condicionales.\nUso de loops.\nTrabajo con arrays\nTrabajo con strings."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#m√≥dulo-1-fundamentos-de-java",
    "href": "Modulo_1_Java_Basics.html#m√≥dulo-1-fundamentos-de-java",
    "title": "Java Basics",
    "section": "",
    "text": "En este primer m√≥dulo del bootcamp trabajaremos con la sintaxis b√°sica de Java. Practicaremos c√≥mo escribir funciones, usar punto y coma al final de las l√≠neas de c√≥digo, y c√≥mo declarar, inicializar y utilizar variables y constantes. Tambi√©n trabajaremos con condicionales, loops, tipos de datos primitivos, arreglos y strings.\nSi tienes experiencia en lenguajes como JavaScript o Python, reconocer√°s conceptos como variables y bucles, y podr√°s enfocarte en las particularidades de Java (tipado est√°tico, estructura de clases, manejo de arrays). Si es tu primer acercamiento a la programaci√≥n, estos conceptos ser√°n tu base s√≥lida para avanzar.\nEl enfoque incluye:\n\nSintaxis espec√≠fica de Java (vs otros lenguajes)\nBuenas pr√°cticas desde el d√≠a 1\nEjercicios para adaptar l√≥gica previa (o construirla desde cero)\n\n¬°Todos partiremos de ejercicios b√°sicos que nos permitir√°n nivelar conocimientos mientras exploramos Java!"
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_1_Java_Basics.html#objetivos-de-aprendizaje-oas",
    "title": "Java Basics",
    "section": "",
    "text": "Sintaxis b√°sica de Java.\nManipulaci√≥n de tipos de datos primitivos.\nUso de condicionales.\nUso de loops.\nTrabajo con arrays\nTrabajo con strings."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#consejos",
    "href": "Modulo_1_Java_Basics.html#consejos",
    "title": "Java Basics",
    "section": "Consejos",
    "text": "Consejos\n\nUsa System.out.println para depurar tu c√≥digo.\nPrueba casos extremos: arrays vac√≠os, valores negativos, etc."
  },
  {
    "objectID": "Modulo_1_Java_Basics.html#materiales-de-referencia",
    "href": "Modulo_1_Java_Basics.html#materiales-de-referencia",
    "title": "Java Basics",
    "section": "Materiales de Referencia",
    "text": "Materiales de Referencia\n\n\n\nObjetivo de Aprendizaje\nMateriales Escritos\nVideos\n\n\n\n\n1. Sintaxis b√°sica de Java\nJava Tutorial for Beginners - W3Schools  Java Basics - Oracle Documentation  Introduction to Java Programming - GeeksforGeeks\nSintaxis de Java\n\n\n2. Manipulaci√≥n de tipos de datos primitivos\nPrimitive Data Types - Oracle Documentation  Java Data Types - W3Schools  Primitive Data Types in Java - GeeksforGeeks\nTipos de datos primitivos  Operadores\n\n\n3. Uso de condicionales\nControl Flow Statements (If-Else) - Oracle  Java If ‚Ä¶ Else - W3Schools  Conditional Statements - GeeksforGeeks\nCondicionales\n\n\n4. Uso de loops\nLoops - Oracle Documentation  Java Loops - W3Schools  Loops in Java - GeeksforGeeks\nLoops\n\n\n5. Trabajo con arrays\nArrays - Oracle Documentation  Java Arrays - W3Schools  Arrays in Java - GeeksforGeeks\nArrays Unidimensionales y Bidimensionales\n\n\n6. Trabajo con strings\nStrings - Oracle Documentation  Java Strings - W3Schools  String Class in Java - GeeksforGeeks\n\n\n\nRecurso Adicional: Java para Programadoras\nMaterial escrito\nVideo playlist"
  },
  {
    "objectID": "TODO.html",
    "href": "TODO.html",
    "title": "HSBC Java Camp by Laboratoria",
    "section": "",
    "text": "Dividir OAs en 6 (3 y 4 dividir en 2 partes cada uno)\nMover Referencias a Modulo 1\nOcultar otros m√≥dulos 2-4 en el men√∫ e √≠ndice.\nCambiar c√≥digos de ejercicio\nIncluir una intro coloquial al curso\nCambiar el titulo de M1"
  },
  {
    "objectID": "TODO.html#tareas",
    "href": "TODO.html#tareas",
    "title": "HSBC Java Camp by Laboratoria",
    "section": "",
    "text": "Dividir OAs en 6 (3 y 4 dividir en 2 partes cada uno)\nMover Referencias a Modulo 1\nOcultar otros m√≥dulos 2-4 en el men√∫ e √≠ndice.\nCambiar c√≥digos de ejercicio\nIncluir una intro coloquial al curso\nCambiar el titulo de M1"
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html",
    "href": "Modulo_4_AdvancedPrep.html",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Consolidar habilidades en manipulaci√≥n de fechas y tiempos.\nResolver problemas con l√≥gica condicional compleja.\nPracticar el manejo de transacciones y c√°lculos financieros.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nCodewars\nBanker‚Äôs Plan\nL√≥gica financiera, loops\n2,3\n\n\nCodewars\nCalculating Bank Fees\nManejo de transacciones, condicionales\n2,3\n\n\nLeetCode\nDesign Underground System\nDise√±o de sistemas, colecciones\n1,4\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nEdabit\nATM Machine\nOOP, condicionales\n2,3\n\n\n\n\n\n\n\nUsa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker‚Äôs Plan.\nPractica la divisi√≥n de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vac√≠as, meses sin actividad, etc."
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_4_AdvancedPrep.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Consolidar habilidades en manipulaci√≥n de fechas y tiempos.\nResolver problemas con l√≥gica condicional compleja.\nPracticar el manejo de transacciones y c√°lculos financieros."
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#desaf√≠os",
    "href": "Modulo_4_AdvancedPrep.html#desaf√≠os",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nCodewars\nBanker‚Äôs Plan\nL√≥gica financiera, loops\n2,3\n\n\nCodewars\nCalculating Bank Fees\nManejo de transacciones, condicionales\n2,3\n\n\nLeetCode\nDesign Underground System\nDise√±o de sistemas, colecciones\n1,4\n\n\nHackerRank\nJava Currency Formatter\nFormato de datos, locales\n1\n\n\nEdabit\nATM Machine\nOOP, condicionales\n2,3"
  },
  {
    "objectID": "Modulo_4_AdvancedPrep.html#consejos",
    "href": "Modulo_4_AdvancedPrep.html#consejos",
    "title": "Advanced Preparation Challenges",
    "section": "",
    "text": "Usa LocalDate y DateTimeFormatter para manejar fechas en problemas como Banker‚Äôs Plan.\nPractica la divisi√≥n de problemas en subtareas (por ejemplo, calcular ingresos, aplicar tarifas, etc.).\nPrueba casos extremos: transacciones vac√≠as, meses sin actividad, etc."
  },
  {
    "objectID": "Modulo_2_Intermediate.html",
    "href": "Modulo_2_Intermediate.html",
    "title": "Intermediate Challenges",
    "section": "",
    "text": "Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con l√≥gica intermedia y manipulaci√≥n de strings.\nIntroducir el manejo de fechas y tiempos.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nValid Parentheses\nStacks, strings\n3\n\n\nHackerRank\nJava Date and Time\nManejo de fechas\n4\n\n\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\nEdabit\nATM Machine\nOOP, condicionales\n1,3\n\n\n\n\n\n\n\nPractica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas."
  },
  {
    "objectID": "Modulo_2_Intermediate.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_2_Intermediate.html#objetivos-de-aprendizaje-oas",
    "title": "Intermediate Challenges",
    "section": "",
    "text": "Introducir conceptos de Programaci√≥n Orientada a Objetos (OOP).\nTrabajar con colecciones (listas, mapas, conjuntos).\nResolver problemas con l√≥gica intermedia y manipulaci√≥n de strings.\nIntroducir el manejo de fechas y tiempos."
  },
  {
    "objectID": "Modulo_2_Intermediate.html#desaf√≠os",
    "href": "Modulo_2_Intermediate.html#desaf√≠os",
    "title": "Intermediate Challenges",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nValid Parentheses\nStacks, strings\n3\n\n\nHackerRank\nJava Date and Time\nManejo de fechas\n4\n\n\nHackerRank\nJava Map\nColecciones (HashMap)\n2\n\n\nCodewars\nWho Likes It?\nFormato de strings\n3\n\n\nEdabit\nATM Machine\nOOP, condicionales\n1,3"
  },
  {
    "objectID": "Modulo_2_Intermediate.html#consejos",
    "href": "Modulo_2_Intermediate.html#consejos",
    "title": "Intermediate Challenges",
    "section": "",
    "text": "Practica el uso de HashMap y ArrayList para problemas de colecciones.\nUsa LocalDate y DateTimeFormatter para manejar fechas."
  },
  {
    "objectID": "presentacion.html",
    "href": "presentacion.html",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Java no es solo caf√©‚Ä¶ ¬°es magia que hace funcionar apps, juegos y hasta naves espaciales! üöÄ\nObjetivo de la charla: Romper el hielo con un ejercicio pr√°ctico y entender c√≥mo Java nos ayuda a resolver problemas.\n\n\n\n\nEjercicio propuesto: Crear un m√©todo que determine si un a√±o es bisiesto.\nPor qu√© este ejercicio:\n\nCombina condicionales y operadores l√≥gicos\nEs un problema del mundo real (¬°hasta Google lo usa!)\n\n\n\n\n\nReglas de a√±o bisiesto:\n\nSi el a√±o es divisible por 4 ‚Üí Posible bisiesto\nPero si es divisible por 100 ‚Üí No es bisiesto\nA menos que tambi√©n sea divisible por 400 ‚Üí ¬°S√≠ es bisiesto!\n\n\n\n\n\npublic class LeapYear {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            return true;\n        } else if (year % 100 == 0) {\n            return false;\n        } else if (year % 400 == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n\n\n\nError com√∫n: No seguir el orden correcto de las condiciones.\nSoluci√≥n correcta:\npublic static boolean isLeapYear(int year) {\n    if (year % 400 == 0) {\n        return true;\n    } else if (year % 100 == 0) {\n        return false;\n    } else {\n        return year % 4 == 0;\n    }\n}\n\n\n\n\nEjemplos interactivos:\n\n2000 ‚Üí S√≠ (divisible por 400)\n1900 ‚Üí No (divisible por 100 pero no por 400)\n2024 ‚Üí S√≠ (divisible por 4, no por 100)\n\n\n\n\n\nTips para no abrumarse:\n\nJava es como un tamagotchi: requiere atenci√≥n, pero no muerde üê∂\nErrores comunes:\n\nOlvidar == vs =\nNo probar casos extremos\n\n\n\n\n\n\nPreguntas frecuentes:\n\n¬øJava funciona en mi cafetera? ‚Üí S√≠, si tiene Java ME ‚òï\n¬øPor qu√© mi c√≥digo compila pero no hace lo que quiero? ‚Üí ¬°Hablemos de l√≥gica!\n\n\n\n\n\nEjercicio para practicar:\nModifica el m√©todo para que tambi√©n verifique si el a√±o es mayor que 1582.\nPremio simb√≥lico: Sticker virtual de ‚ÄúJava Ninja‚Äù ü•ã\n\n\n\n\nMensaje final:\nCada error es un paso para dominar Java. ¬°Ustedes ya resolvieron un problema real en 20 minutos! üéâ"
  },
  {
    "objectID": "presentacion.html#diapositiva-1-bienvenidas-al-mundo-de-java",
    "href": "presentacion.html#diapositiva-1-bienvenidas-al-mundo-de-java",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Java no es solo caf√©‚Ä¶ ¬°es magia que hace funcionar apps, juegos y hasta naves espaciales! üöÄ\nObjetivo de la charla: Romper el hielo con un ejercicio pr√°ctico y entender c√≥mo Java nos ayuda a resolver problemas."
  },
  {
    "objectID": "presentacion.html#diapositiva-2-el-ejemplo-m√°gico",
    "href": "presentacion.html#diapositiva-2-el-ejemplo-m√°gico",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Ejercicio propuesto: Crear un m√©todo que determine si un a√±o es bisiesto.\nPor qu√© este ejercicio:\n\nCombina condicionales y operadores l√≥gicos\nEs un problema del mundo real (¬°hasta Google lo usa!)"
  },
  {
    "objectID": "presentacion.html#diapositiva-3-desglosando-el-problema",
    "href": "presentacion.html#diapositiva-3-desglosando-el-problema",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Reglas de a√±o bisiesto:\n\nSi el a√±o es divisible por 4 ‚Üí Posible bisiesto\nPero si es divisible por 100 ‚Üí No es bisiesto\nA menos que tambi√©n sea divisible por 400 ‚Üí ¬°S√≠ es bisiesto!"
  },
  {
    "objectID": "presentacion.html#diapositiva-4-a-codear-parte-1",
    "href": "presentacion.html#diapositiva-4-a-codear-parte-1",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "public class LeapYear {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            return true;\n        } else if (year % 100 == 0) {\n            return false;\n        } else if (year % 400 == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}"
  },
  {
    "objectID": "presentacion.html#diapositiva-5-depurando-el-c√≥digo",
    "href": "presentacion.html#diapositiva-5-depurando-el-c√≥digo",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Error com√∫n: No seguir el orden correcto de las condiciones.\nSoluci√≥n correcta:\npublic static boolean isLeapYear(int year) {\n    if (year % 400 == 0) {\n        return true;\n    } else if (year % 100 == 0) {\n        return false;\n    } else {\n        return year % 4 == 0;\n    }\n}"
  },
  {
    "objectID": "presentacion.html#diapositiva-6-probando-nuestro-c√≥digo",
    "href": "presentacion.html#diapositiva-6-probando-nuestro-c√≥digo",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Ejemplos interactivos:\n\n2000 ‚Üí S√≠ (divisible por 400)\n1900 ‚Üí No (divisible por 100 pero no por 400)\n2024 ‚Üí S√≠ (divisible por 4, no por 100)"
  },
  {
    "objectID": "presentacion.html#diapositiva-7-java-vs-la-vida-real",
    "href": "presentacion.html#diapositiva-7-java-vs-la-vida-real",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Tips para no abrumarse:\n\nJava es como un tamagotchi: requiere atenci√≥n, pero no muerde üê∂\nErrores comunes:\n\nOlvidar == vs =\nNo probar casos extremos"
  },
  {
    "objectID": "presentacion.html#diapositiva-8-preguntas-tiempo-de-rescate",
    "href": "presentacion.html#diapositiva-8-preguntas-tiempo-de-rescate",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Preguntas frecuentes:\n\n¬øJava funciona en mi cafetera? ‚Üí S√≠, si tiene Java ME ‚òï\n¬øPor qu√© mi c√≥digo compila pero no hace lo que quiero? ‚Üí ¬°Hablemos de l√≥gica!"
  },
  {
    "objectID": "presentacion.html#diapositiva-9-tarea-divertida",
    "href": "presentacion.html#diapositiva-9-tarea-divertida",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Ejercicio para practicar:\nModifica el m√©todo para que tambi√©n verifique si el a√±o es mayor que 1582.\nPremio simb√≥lico: Sticker virtual de ‚ÄúJava Ninja‚Äù ü•ã"
  },
  {
    "objectID": "presentacion.html#diapositiva-10-java-es-poder",
    "href": "presentacion.html#diapositiva-10-java-es-poder",
    "title": "¬°Bienvenidas al Mundo de Java! üéâ‚òï",
    "section": "",
    "text": "Mensaje final:\nCada error es un paso para dominar Java. ¬°Ustedes ya resolvieron un problema real en 20 minutos! üéâ"
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Para contribuir a este proyecto, sigue estos pasos:\n\n\n\nInstala Quarto Descarga e instala Quarto desde: https://quarto.org/docs/get-started/\nExtensi√≥n VSCode (opcional) Instala la extensi√≥n oficial de Quarto en Visual Studio Code.\n\n\n\n\n\nVista previa: Ejecuta quarto preview para ver los cambios localmente\nPublicar: Usa quarto publish gh-pages para publicar en GitHub Pages\n\nPara m√°s informaci√≥n consulta la documentaci√≥n oficial de Quarto."
  },
  {
    "objectID": "CONTRIBUTING.html#requisitos",
    "href": "CONTRIBUTING.html#requisitos",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Instala Quarto Descarga e instala Quarto desde: https://quarto.org/docs/get-started/\nExtensi√≥n VSCode (opcional) Instala la extensi√≥n oficial de Quarto en Visual Studio Code."
  },
  {
    "objectID": "CONTRIBUTING.html#uso-b√°sico",
    "href": "CONTRIBUTING.html#uso-b√°sico",
    "title": "Gu√≠a de Contribuci√≥n",
    "section": "",
    "text": "Vista previa: Ejecuta quarto preview para ver los cambios localmente\nPublicar: Usa quarto publish gh-pages para publicar en GitHub Pages\n\nPara m√°s informaci√≥n consulta la documentaci√≥n oficial de Quarto."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "Este repositorio contiene el plan de estudios para un curso de Java de 2 meses, dividido en 4 bloques de semanas. Cada bloque se enfoca en habilidades espec√≠ficas, desde lo b√°sico hasta problemas avanzados, culminando en un proyecto final.\n\n\n\nM√≥dulo 1 (syntax, data types, loops, conditionals).\nM√≥dulo 2 (OOP, collections, algorithms).\nM√≥dulo 3 (data structures, complex problem-solving).\nM√≥dulo 4 Capstone project and review.\n\n\n\n\n\nCada secci√≥n contiene una lista de desaf√≠os con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) est√°n asociados a cada desaf√≠o."
  },
  {
    "objectID": "index.html#estructura-del-curso",
    "href": "index.html#estructura-del-curso",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "M√≥dulo 1 (syntax, data types, loops, conditionals).\nM√≥dulo 2 (OOP, collections, algorithms).\nM√≥dulo 3 (data structures, complex problem-solving).\nM√≥dulo 4 Capstone project and review."
  },
  {
    "objectID": "index.html#c√≥mo-usar-este-repositorio",
    "href": "index.html#c√≥mo-usar-este-repositorio",
    "title": "HSBC Java Coding Challenges Path",
    "section": "",
    "text": "Cada secci√≥n contiene una lista de desaf√≠os con enlaces a las plataformas.\nLos objetivos de aprendizaje (OAs) est√°n asociados a cada desaf√≠o."
  },
  {
    "objectID": "Modulo_3_Advanced.html",
    "href": "Modulo_3_Advanced.html",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Profundizar en estructuras de datos avanzadas (√°rboles, grafos, etc.).\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y an√°lisis de complejidad.\nTrabajar con recursi√≥n y programaci√≥n din√°mica.\n\n\n\n\n\n\n\nPlataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nMerge Intervals\nSorting, arrays\n2\n\n\nLeetCode\nMaximum Subarray\nProgramaci√≥n din√°mica\n2,3\n\n\nCodewars\nRange Extraction\nArrays, l√≥gica\n2\n\n\nHackerRank\nJava BitSet\nManipulaci√≥n de bits\n1\n\n\nAdvent of Code\nDay 1: Report Repair\nArrays, loops\n2,3\n\n\n\n\n\n\n\nAprende a identificar la complejidad temporal de tus soluciones.\nUsa recursi√≥n para problemas como ‚ÄúFibonacci‚Äù o ‚ÄúFactorial‚Äù."
  },
  {
    "objectID": "Modulo_3_Advanced.html#objetivos-de-aprendizaje-oas",
    "href": "Modulo_3_Advanced.html#objetivos-de-aprendizaje-oas",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Profundizar en estructuras de datos avanzadas (√°rboles, grafos, etc.).\nResolver problemas complejos con algoritmos eficientes.\nIntroducir Big O Notation y an√°lisis de complejidad.\nTrabajar con recursi√≥n y programaci√≥n din√°mica."
  },
  {
    "objectID": "Modulo_3_Advanced.html#desaf√≠os",
    "href": "Modulo_3_Advanced.html#desaf√≠os",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Plataforma\nEnlace\nHabilidades evaluadas\nOA\n\n\n\n\nLeetCode\nMerge Intervals\nSorting, arrays\n2\n\n\nLeetCode\nMaximum Subarray\nProgramaci√≥n din√°mica\n2,3\n\n\nCodewars\nRange Extraction\nArrays, l√≥gica\n2\n\n\nHackerRank\nJava BitSet\nManipulaci√≥n de bits\n1\n\n\nAdvent of Code\nDay 1: Report Repair\nArrays, loops\n2,3"
  },
  {
    "objectID": "Modulo_3_Advanced.html#consejos",
    "href": "Modulo_3_Advanced.html#consejos",
    "title": "Advanced Challenges",
    "section": "",
    "text": "Aprende a identificar la complejidad temporal de tus soluciones.\nUsa recursi√≥n para problemas como ‚ÄúFibonacci‚Äù o ‚ÄúFactorial‚Äù."
  }
]